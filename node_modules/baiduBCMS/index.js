/**
 * Created by zzy on 7/11/14.
 */
var request = require('superagent');
var crypto = require('crypto');
var _ = require('underscore')._;
var BCMS = function(ak,sk){
    this.ak = ak;
    this.sk = sk;
};

function sign(method,url,sk,params){
    var keys = _.keys(params);
    keys = keys.sort();
    var urlStr='';
    for(var i in keys){
        console.log(i);
        urlStr+=keys[i]+'='+params[keys[i]];
    }
    var basic_string = encodeURIComponent(method+url+urlStr+sk);
    var md5 = crypto.createHash('md5');
    md5.update(basic_string);
    return md5.digest('hex');
};

BCMS.prototype.create = function(parmas,fn){
    var url = 'http://bcms.api.duapp.com/rest/2.0/bcms/queue';
    var timestamp = parseInt(Date.now()/1000);
    parmas.client_id = this.ak;
    parmas.method = 'create';
    parmas.timestamp = timestamp;
    var signStr = sign("POST",url,this.sk,parmas);
    parmas.sign = signStr;
    request.post(url)
        .send(parmas)
        .set("Content-Type","application/x-www-form-urlencoded")
        .end(function(res){
            console.log(res.body);
            if (res.ok) {
                fn(null,JSON.stringify(res.body));
            } else {
                fn(res.body,null);
            }
        });
};

BCMS.prototype.drop = function(queue,parmas,fn){
    var url = 'http://bcms.api.duapp.com/rest/2.0/bcms/'+queue;
    var timestamp = parseInt(Date.now()/1000);
    parmas.client_id = this.ak;
    parmas.method = 'drop';
    parmas.timestamp = timestamp;
    var signStr = sign("POST",url,this.sk,parmas);
    parmas.sign = signStr;
    request.post(url)
        .send(parmas)
        .set("Content-Type","application/x-www-form-urlencoded")
        .end(function(res){
            if (res.ok) {
                fn(null,JSON.stringify(res.body));
            } else {
                fn(res.body,null);
            }
        });
};

BCMS.prototype.subscribe = function(queue,parmas,fn){
    var url = 'http://bcms.api.duapp.com/rest/2.0/bcms/'+queue;
    var timestamp = parseInt(Date.now()/1000);
    parmas.client_id = this.ak;
    parmas.method = 'subscribe';
    parmas.timestamp = timestamp;
    var signStr = sign("POST",url,this.sk,parmas);
    parmas.sign = signStr;
    request.post(url)
        .send(parmas)
        .set("Content-Type","application/x-www-form-urlencoded")
        .end(function(res){
            if (res.ok) {
                fn(null,JSON.stringify(res.body));
            } else {
                fn(res.body,null);
            }
        });
};

BCMS.prototype.unsubscribe = function(queue,parmas,fn){
    var url = 'http://bcms.api.duapp.com/rest/2.0/bcms/'+queue;
    var timestamp = parseInt(Date.now()/1000);
    parmas.client_id = this.ak;
    parmas.method = 'unsubscribe';
    parmas.timestamp = timestamp;
    var signStr = sign("POST",url,this.sk,parmas);
    parmas.sign = signStr;
    request.post(url)
        .send(parmas)
        .set("Content-Type","application/x-www-form-urlencoded")
        .end(function(res){
            if (res.ok) {
                fn(null,JSON.stringify(res.body));
            } else {
                fn(res.body,null);
            }
        });
};

BCMS.prototype.unsubscribeall = function(queue,parmas,fn){
    var url = 'http://bcms.api.duapp.com/rest/2.0/bcms/'+queue;
    var timestamp = parseInt(Date.now()/1000);
    parmas.client_id = this.ak;
    parmas.method = 'unsubscribeall';
    parmas.timestamp = timestamp;
    var signStr = sign("POST",url,this.sk,parmas);
    parmas.sign = signStr;
    request.post(url)
        .send(parmas)
        .set("Content-Type","application/x-www-form-urlencoded")
        .end(function(res){
            if (res.ok) {
                fn(null,JSON.stringify(res.body));
            } else {
                fn(res.body,null);
            }
        });
};

BCMS.prototype.grant = function(queue,parmas,fn){
    var url = 'http://bcms.api.duapp.com/rest/2.0/bcms/'+queue;
    var timestamp = parseInt(Date.now()/1000);
    parmas.client_id = this.ak;
    parmas.method = 'grant';
    parmas.timestamp = timestamp;
    var signStr = sign("POST",url,this.sk,parmas);
    parmas.sign = signStr;
    request.post(url)
        .send(parmas)
        .set("Content-Type","application/x-www-form-urlencoded")
        .end(function(res){
            if (res.ok) {
                fn(null,JSON.stringify(res.body));
            } else {
                fn(res.body,null);
            }
        });
};

BCMS.prototype.revoke = function(queue,parmas,fn){
    var url = 'http://bcms.api.duapp.com/rest/2.0/bcms/'+queue;
    var timestamp = parseInt(Date.now()/1000);
    parmas.client_id = this.ak;
    parmas.method = 'revoke';
    parmas.timestamp = timestamp;
    var signStr = sign("POST",url,this.sk,parmas);
    parmas.sign = signStr;
    request.post(url)
        .send(parmas)
        .set("Content-Type","application/x-www-form-urlencoded")
        .end(function(res){
            if (res.ok) {
                fn(null,JSON.stringify(res.body));
            } else {
                fn(res.body,null);
            }
        });
};

BCMS.prototype.suspend = function(queue,parmas,fn){
    var url = 'http://bcms.api.duapp.com/rest/2.0/bcms/'+queue;
    var timestamp = parseInt(Date.now()/1000);
    parmas.client_id = this.ak;
    parmas.method = 'suspend';
    parmas.timestamp = timestamp;
    var signStr = sign("POST",url,this.sk,parmas);
    parmas.sign = signStr;
    request.post(url)
        .send(parmas)
        .set("Content-Type","application/x-www-form-urlencoded")
        .end(function(res){
            if (res.ok) {
                fn(null,JSON.stringify(res.body));
            } else {
                fn(res.body,null);
            }
        });
};

BCMS.prototype.resume = function(queue,parmas,fn){
    var url = 'http://bcms.api.duapp.com/rest/2.0/bcms/'+queue;
    var timestamp = parseInt(Date.now()/1000);
    parmas.client_id = this.ak;
    parmas.method = 'resume';
    parmas.timestamp = timestamp;
    var signStr = sign("POST",url,this.sk,parmas);
    parmas.sign = signStr;
    request.post(url)
        .send(parmas)
        .set("Content-Type","application/x-www-form-urlencoded")
        .end(function(res){
            if (res.ok) {
                fn(null,JSON.stringify(res.body));
            } else {
                fn(res.body,null);
            }
        });
};

BCMS.prototype.publish = function(queue,parmas,fn){
    var url = 'http://bcms.api.duapp.com/rest/2.0/bcms/'+queue;
    var timestamp = parseInt(Date.now()/1000);
    parmas.client_id = this.ak;
    parmas.method = 'publish';
    parmas.timestamp = timestamp;
    var signStr = sign("POST",url,this.sk,parmas);
    parmas.sign = signStr;
    request.post(url)
        .send(parmas)
        .set("Content-Type","application/x-www-form-urlencoded")
        .end(function(res){
            if (res.ok) {
                fn(null,JSON.stringify(res.body));
            } else {
                fn(res.body,null);
            }
        });
};

BCMS.prototype.publishes = function(queue,parmas,fn){
    var url = 'http://bcms.api.duapp.com/rest/2.0/bcms/'+queue;
    var timestamp = parseInt(Date.now()/1000);
    parmas.client_id = this.ak;
    parmas.method = 'publishes';
    parmas.timestamp = timestamp;
    var signStr = sign("POST",url,this.sk,parmas);
    parmas.sign = signStr;
    request.post(url)
        .send(parmas)
        .set("Content-Type","application/x-www-form-urlencoded")
        .end(function(res){
            if (res.ok) {
                fn(null,JSON.stringify(res.body));
            } else {
                fn(res.body,null);
            }
        });
};

BCMS.prototype.fetch = function(queue,parmas,fn){
    var url = 'http://bcms.api.duapp.com/rest/2.0/bcms/'+queue;
    var timestamp = parseInt(Date.now()/1000);
    parmas.client_id = this.ak;
    parmas.method = 'fetch';
    parmas.timestamp = timestamp;
    var signStr = sign("POST",url,this.sk,parmas);
    parmas.sign = signStr;
    request.post(url)
        .send(parmas)
        .set("Content-Type","application/x-www-form-urlencoded")
        .end(function(res){
            if (res.ok) {
                fn(null,JSON.stringify(res.body));
            } else {
                fn(res.body,null);
            }
        });
};

BCMS.prototype.mail = function(queue,parmas,fn){
    var url = 'http://bcms.api.duapp.com/rest/2.0/bcms/'+queue;
    var timestamp = parseInt(Date.now()/1000);
    parmas.client_id = this.ak;
    parmas.method = 'mail';
    parmas.timestamp = timestamp;
    var signStr = sign("POST",url,this.sk,parmas);
    parmas.sign = signStr;
    request.post(url)
        .send(parmas)
        .set("Content-Type","application/x-www-form-urlencoded")
        .end(function(res){
            if (res.ok) {
                fn(null,JSON.stringify(res.body));
            } else {
                fn(res.body,null);
            }
        });
};

BCMS.prototype.confirm = function(queue,parmas,fn){
    var url = 'http://bcms.api.duapp.com/rest/2.0/bcms/'+queue;
    var timestamp = parseInt(Date.now()/1000);
    parmas.client_id = this.ak;
    parmas.method = 'confirm';
    parmas.timestamp = timestamp;
    var signStr = sign("POST",url,this.sk,parmas);
    parmas.sign = signStr;
    request.post(url)
        .send(parmas)
        .set("Content-Type","application/x-www-form-urlencoded")
        .end(function(res){
            if (res.ok) {
                fn(null,JSON.stringify(res.body));
            } else {
                fn(res.body,null);
            }
        });
};

BCMS.prototype.cancel = function(queue,parmas,fn){
    var url = 'http://bcms.api.duapp.com/rest/2.0/bcms/'+queue;
    var timestamp = parseInt(Date.now()/1000);
    parmas.client_id = this.ak;
    parmas.method = 'cancel';
    parmas.timestamp = timestamp;
    var signStr = sign("POST",url,this.sk,parmas);
    parmas.sign = signStr;
    request.post(url)
        .send(parmas)
        .set("Content-Type","application/x-www-form-urlencoded")
        .end(function(res){
            if (res.ok) {
                fn(null,JSON.stringify(res.body));
            } else {
                fn(res.body,null);
            }
        });
};

module.exports = BCMS;